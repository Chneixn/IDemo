//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/InputBridge/IntputSoure/SourceInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SourceInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SourceInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SourceInput"",
    ""maps"": [
        {
            ""name"": ""PlayerInput"",
            ""id"": ""67cecd12-e8c0-4f35-9f35-00b35b8806d0"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""88560b67-f889-4a43-a9bc-c7d74c1cd764"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6bf4685e-e300-4aec-9f66-8d1b988cf2b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c4b0b86f-ba39-4a7e-8a3d-d70acd4f3726"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""571f7f10-6fed-43ab-81f8-02647ccc106f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""1c035788-5b29-4b0d-b8b5-8d3af7db63d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""16590040-6766-4c55-969d-ddb929a8addb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""5a10b13e-129a-452e-984a-665ea88ff329"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCamState"",
                    ""type"": ""Button"",
                    ""id"": ""72332794-eeb5-423e-bbed-67ba0128bcd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""3e9245ed-4069-4c7a-b6ef-f80f82c4bc74"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Clamp(min=-0.1,max=0.1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""3fb4fcd9-eb64-4b65-888c-8924d7b26fef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fly"",
                    ""type"": ""Button"",
                    ""id"": ""42d58cee-31df-43d7-8ad7-e71ac2fb01b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c8711389-e197-4701-81ec-fba7720afbf8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b600fec4-4277-4668-a82f-055d396ed202"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MoveDirection"",
                    ""id"": ""7751438e-e785-4ad8-86b9-fd9a1d093d50"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""88756dcb-354e-4c1b-9b67-8871377c9537"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""24bc1f67-e202-449f-89e9-d692e6b2b70a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0aaed6c7-0ecd-4d41-a2d1-cb35e6220072"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d602ef6c-aa30-47d7-a9d1-aae30e1bf70e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""62d557dd-8e7d-475d-81b3-ae13ae6fb9db"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04e16b93-c118-4bc3-b73a-73c46fdc872a"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbe72dc5-2140-4e74-a877-a583d5e84530"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8163f020-c0d8-495c-ab31-c5c5c434009f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a61f6d6c-4987-49e8-8e12-c0dda3cc9d82"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14f4747a-0447-46e4-aff5-8b049074d904"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39e5b036-11f5-4e4f-b128-078d076c6e44"",
                    ""path"": ""<XInputController>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db669484-f638-4361-9a5a-4737fd21d5ff"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d40560b2-8de8-4b37-afce-4bf16e591b79"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f51cf01b-6404-4554-a661-d41001ddaa37"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff6675dd-f5f5-4499-b1e7-2f674660afc9"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SwitchCamState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc637e6a-31ca-4f93-aa66-401cc30c181e"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2251b9c-bf13-410b-9315-5a6861629db3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3046391-b9d4-4e75-a9dc-ad5d0d93f3a0"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Fly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InventoryInput"",
            ""id"": ""c8fea0e1-480a-44ed-8ecf-f2744e573701"",
            ""actions"": [
                {
                    ""name"": ""HotBar 1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""53988f93-9a66-43e7-a60a-485be895d02b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""265e134d-1002-4eaf-82fa-f7eb8b466133"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 3"",
                    ""type"": ""PassThrough"",
                    ""id"": ""16878c85-a858-4b92-9fd4-af1934dd6fe8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 4"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4ca794d6-fc82-49e4-b559-89cd36d94461"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 5"",
                    ""type"": ""PassThrough"",
                    ""id"": ""17bd88c2-351a-41fe-9e29-900a430c8119"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 6"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a16cf07c-80c5-486e-bf4d-31ebe87d4098"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 7"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a0d7dd03-0248-437d-bc77-0b1adf6a6f74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 8"",
                    ""type"": ""PassThrough"",
                    ""id"": ""13097236-1790-4201-b47f-3008782d89e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 9"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fd41ea5f-9282-4471-b241-32738db9092f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBar 0"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c0968472-1084-4e6b-8112-fdd38862cbb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Wheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""90d19069-3982-4ac7-87ed-0bb82b0b8ff3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""b533769e-d1f9-42d5-9e39-bd61acb44f42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowBackpack"",
                    ""type"": ""Button"",
                    ""id"": ""8bde75ec-0cd4-4ecc-af2e-8249333c9120"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""97ec81dd-38dd-4a69-afa6-da8f33059cc9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bc1cc24e-7c06-4e06-b773-44cf54dbf67f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e39b137e-c625-465c-bdaf-85ae5f7bd77d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12aa67f1-ea36-4934-9ffb-c52df6eee805"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83acaeb3-3b59-498e-9a93-651271ee88b9"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40d0b201-cc2d-47ce-a055-6e8a2ab55e78"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad24ea0e-b82d-4575-a29a-e8fdda74ccae"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a5ce611-c511-4702-ba5a-0f33cb85cb62"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f2824bf-92ba-4b37-ad70-9689137a7500"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8793976-8652-4fa1-b234-c2b4cbcdc245"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4130280-00da-4d3b-9548-83a883f1a97c"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBar 0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d7ee184-cfe3-46ea-9166-755118290084"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d663418d-17f8-40e2-8438-a65affeec71f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""153bfa54-0534-4733-b3a7-0b37bfa3a85c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15c34cae-6536-4574-9918-58b323fb8987"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ShowBackpack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""677969dc-d846-42cc-881b-da0fb2822dde"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2711c18c-c72d-40bc-a178-9a4f1981a736"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WeaponInput"",
            ""id"": ""0f98a2a7-ecdd-48b7-af01-ff19b530a6d2"",
            ""actions"": [
                {
                    ""name"": ""QuickUse_0"",
                    ""type"": ""Button"",
                    ""id"": ""0a933c33-08b3-4d47-b21d-5c550b5cc6fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickUse_1"",
                    ""type"": ""Button"",
                    ""id"": ""e3baa31b-2f19-4bdc-98fc-929b3b3dd230"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickUse_2"",
                    ""type"": ""Button"",
                    ""id"": ""9218d0f0-3c7a-4bcb-8900-208854907440"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickUse_3"",
                    ""type"": ""Button"",
                    ""id"": ""ed2ca517-bc2d-4fc9-a868-13cd050510eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickUse_4"",
                    ""type"": ""Button"",
                    ""id"": ""357997d6-cad0-412c-a412-5f9b273b36ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchLastWeapon"",
                    ""type"": ""PassThrough"",
                    ""id"": ""864b5fe3-723e-4ba8-a7a0-7f2eb87f0d3a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""975bdfb5-0348-451c-b19b-35b5eed44d7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""3dbb4795-e63b-47ed-9f1b-e3c609cef929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""0e37148a-f236-4dcf-b29f-db9af6cf7631"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireModeSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""4033eb66-eaad-46f8-9cb6-e4fa383896a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7b418264-c591-4c7b-b91f-faeaa453f06b"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuickUse_0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9c7f797-9c39-4e58-9af5-5aaa90e28895"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SwitchLastWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c35b055d-c727-4fa0-853c-0c185257a847"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SwitchLastWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbad4192-10c8-4035-b706-631afbb6bdd6"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e12a916-cfe7-4fcd-9b63-4d4ac0667d7b"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce4b4730-75fa-4086-9d83-57d266e383cf"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuickUse_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34e06f0f-b94c-4d85-a4cc-b0f61db056a7"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuickUse_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""446dcfa0-231b-4597-bc61-09b32b773f36"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuickUse_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83e34537-df8c-465c-a2a7-e43b92c0a132"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c970ff4-0309-4383-bc58-e333799745f7"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f727cc3b-ab89-45b9-8cf4-d9f8c245b6b1"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuickUse_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0203862d-6130-4136-8007-e4d74ba6fde3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33aefa61-4dbb-43fc-bb04-c407ff19c9be"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5988b3ee-1966-4901-ab1d-02c854b72076"",
                    ""path"": ""<XInputController>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FireModeSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AbilityInput"",
            ""id"": ""d6db5c66-e3ed-4d8f-a61f-03a55af44a13"",
            ""actions"": [
                {
                    ""name"": ""UseAbility"",
                    ""type"": ""Button"",
                    ""id"": ""1ae2f5b8-950b-4aca-8aae-96e15d33005e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ce2dfa5d-9c8c-4c3c-8f63-c528cc9294ff"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UseAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MapInput"",
            ""id"": ""65b7c35b-05d4-4026-bdb5-55520ca9b270"",
            ""actions"": [
                {
                    ""name"": ""CloseMap"",
                    ""type"": ""Button"",
                    ""id"": ""6b986a84-8e5c-45dc-8053-c2205720015d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomPlus"",
                    ""type"": ""Button"",
                    ""id"": ""2248849a-8766-4429-9f13-6ef8a9d8de68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomLess"",
                    ""type"": ""Button"",
                    ""id"": ""fda2d10c-8905-4b0b-a491-47f688ee74b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""ed225aa5-f719-4086-a0a1-1e453aa5ba28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Canel"",
                    ""type"": ""Button"",
                    ""id"": ""3b18ee30-4371-48d0-830d-ef9ac8e53dd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""50fee80c-f866-4c5f-b679-8200ab6c6637"",
                    ""path"": ""<XInputController>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CloseMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a55576e4-0678-43d5-a48b-cdc6b89d4736"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ZoomPlus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c309974-6fcf-4de3-bf74-939d55902525"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ZoomLess"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a634ddcd-52b8-4503-a443-9d6ad5312533"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8536130c-8bcc-4109-90be-bf3d645818a9"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Canel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerInput
        m_PlayerInput = asset.FindActionMap("PlayerInput", throwIfNotFound: true);
        m_PlayerInput_Movement = m_PlayerInput.FindAction("Movement", throwIfNotFound: true);
        m_PlayerInput_Jump = m_PlayerInput.FindAction("Jump", throwIfNotFound: true);
        m_PlayerInput_Look = m_PlayerInput.FindAction("Look", throwIfNotFound: true);
        m_PlayerInput_Interaction = m_PlayerInput.FindAction("Interaction", throwIfNotFound: true);
        m_PlayerInput_Run = m_PlayerInput.FindAction("Run", throwIfNotFound: true);
        m_PlayerInput_Crouch = m_PlayerInput.FindAction("Crouch", throwIfNotFound: true);
        m_PlayerInput_Dodge = m_PlayerInput.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerInput_SwitchCamState = m_PlayerInput.FindAction("SwitchCamState", throwIfNotFound: true);
        m_PlayerInput_Zoom = m_PlayerInput.FindAction("Zoom", throwIfNotFound: true);
        m_PlayerInput_Back = m_PlayerInput.FindAction("Back", throwIfNotFound: true);
        m_PlayerInput_Fly = m_PlayerInput.FindAction("Fly", throwIfNotFound: true);
        // InventoryInput
        m_InventoryInput = asset.FindActionMap("InventoryInput", throwIfNotFound: true);
        m_InventoryInput_HotBar1 = m_InventoryInput.FindAction("HotBar 1", throwIfNotFound: true);
        m_InventoryInput_HotBar2 = m_InventoryInput.FindAction("HotBar 2", throwIfNotFound: true);
        m_InventoryInput_HotBar3 = m_InventoryInput.FindAction("HotBar 3", throwIfNotFound: true);
        m_InventoryInput_HotBar4 = m_InventoryInput.FindAction("HotBar 4", throwIfNotFound: true);
        m_InventoryInput_HotBar5 = m_InventoryInput.FindAction("HotBar 5", throwIfNotFound: true);
        m_InventoryInput_HotBar6 = m_InventoryInput.FindAction("HotBar 6", throwIfNotFound: true);
        m_InventoryInput_HotBar7 = m_InventoryInput.FindAction("HotBar 7", throwIfNotFound: true);
        m_InventoryInput_HotBar8 = m_InventoryInput.FindAction("HotBar 8", throwIfNotFound: true);
        m_InventoryInput_HotBar9 = m_InventoryInput.FindAction("HotBar 9", throwIfNotFound: true);
        m_InventoryInput_HotBar0 = m_InventoryInput.FindAction("HotBar 0", throwIfNotFound: true);
        m_InventoryInput_MouseWheel = m_InventoryInput.FindAction("Mouse Wheel", throwIfNotFound: true);
        m_InventoryInput_Confirm = m_InventoryInput.FindAction("Confirm", throwIfNotFound: true);
        m_InventoryInput_ShowBackpack = m_InventoryInput.FindAction("ShowBackpack", throwIfNotFound: true);
        m_InventoryInput_CloseMenu = m_InventoryInput.FindAction("CloseMenu", throwIfNotFound: true);
        // WeaponInput
        m_WeaponInput = asset.FindActionMap("WeaponInput", throwIfNotFound: true);
        m_WeaponInput_QuickUse_0 = m_WeaponInput.FindAction("QuickUse_0", throwIfNotFound: true);
        m_WeaponInput_QuickUse_1 = m_WeaponInput.FindAction("QuickUse_1", throwIfNotFound: true);
        m_WeaponInput_QuickUse_2 = m_WeaponInput.FindAction("QuickUse_2", throwIfNotFound: true);
        m_WeaponInput_QuickUse_3 = m_WeaponInput.FindAction("QuickUse_3", throwIfNotFound: true);
        m_WeaponInput_QuickUse_4 = m_WeaponInput.FindAction("QuickUse_4", throwIfNotFound: true);
        m_WeaponInput_SwitchLastWeapon = m_WeaponInput.FindAction("SwitchLastWeapon", throwIfNotFound: true);
        m_WeaponInput_Fire = m_WeaponInput.FindAction("Fire", throwIfNotFound: true);
        m_WeaponInput_Aim = m_WeaponInput.FindAction("Aim", throwIfNotFound: true);
        m_WeaponInput_Reload = m_WeaponInput.FindAction("Reload", throwIfNotFound: true);
        m_WeaponInput_FireModeSwitch = m_WeaponInput.FindAction("FireModeSwitch", throwIfNotFound: true);
        // AbilityInput
        m_AbilityInput = asset.FindActionMap("AbilityInput", throwIfNotFound: true);
        m_AbilityInput_UseAbility = m_AbilityInput.FindAction("UseAbility", throwIfNotFound: true);
        // MapInput
        m_MapInput = asset.FindActionMap("MapInput", throwIfNotFound: true);
        m_MapInput_CloseMap = m_MapInput.FindAction("CloseMap", throwIfNotFound: true);
        m_MapInput_ZoomPlus = m_MapInput.FindAction("ZoomPlus", throwIfNotFound: true);
        m_MapInput_ZoomLess = m_MapInput.FindAction("ZoomLess", throwIfNotFound: true);
        m_MapInput_Confirm = m_MapInput.FindAction("Confirm", throwIfNotFound: true);
        m_MapInput_Canel = m_MapInput.FindAction("Canel", throwIfNotFound: true);
    }

    ~@SourceInput()
    {
        UnityEngine.Debug.Assert(!m_PlayerInput.enabled, "This will cause a leak and performance issues, SourceInput.PlayerInput.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_InventoryInput.enabled, "This will cause a leak and performance issues, SourceInput.InventoryInput.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_WeaponInput.enabled, "This will cause a leak and performance issues, SourceInput.WeaponInput.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_AbilityInput.enabled, "This will cause a leak and performance issues, SourceInput.AbilityInput.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_MapInput.enabled, "This will cause a leak and performance issues, SourceInput.MapInput.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInput
    private readonly InputActionMap m_PlayerInput;
    private List<IPlayerInputActions> m_PlayerInputActionsCallbackInterfaces = new List<IPlayerInputActions>();
    private readonly InputAction m_PlayerInput_Movement;
    private readonly InputAction m_PlayerInput_Jump;
    private readonly InputAction m_PlayerInput_Look;
    private readonly InputAction m_PlayerInput_Interaction;
    private readonly InputAction m_PlayerInput_Run;
    private readonly InputAction m_PlayerInput_Crouch;
    private readonly InputAction m_PlayerInput_Dodge;
    private readonly InputAction m_PlayerInput_SwitchCamState;
    private readonly InputAction m_PlayerInput_Zoom;
    private readonly InputAction m_PlayerInput_Back;
    private readonly InputAction m_PlayerInput_Fly;
    public struct PlayerInputActions
    {
        private @SourceInput m_Wrapper;
        public PlayerInputActions(@SourceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerInput_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerInput_Jump;
        public InputAction @Look => m_Wrapper.m_PlayerInput_Look;
        public InputAction @Interaction => m_Wrapper.m_PlayerInput_Interaction;
        public InputAction @Run => m_Wrapper.m_PlayerInput_Run;
        public InputAction @Crouch => m_Wrapper.m_PlayerInput_Crouch;
        public InputAction @Dodge => m_Wrapper.m_PlayerInput_Dodge;
        public InputAction @SwitchCamState => m_Wrapper.m_PlayerInput_SwitchCamState;
        public InputAction @Zoom => m_Wrapper.m_PlayerInput_Zoom;
        public InputAction @Back => m_Wrapper.m_PlayerInput_Back;
        public InputAction @Fly => m_Wrapper.m_PlayerInput_Fly;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerInputActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerInputActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
            @SwitchCamState.started += instance.OnSwitchCamState;
            @SwitchCamState.performed += instance.OnSwitchCamState;
            @SwitchCamState.canceled += instance.OnSwitchCamState;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Fly.started += instance.OnFly;
            @Fly.performed += instance.OnFly;
            @Fly.canceled += instance.OnFly;
        }

        private void UnregisterCallbacks(IPlayerInputActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
            @SwitchCamState.started -= instance.OnSwitchCamState;
            @SwitchCamState.performed -= instance.OnSwitchCamState;
            @SwitchCamState.canceled -= instance.OnSwitchCamState;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Fly.started -= instance.OnFly;
            @Fly.performed -= instance.OnFly;
            @Fly.canceled -= instance.OnFly;
        }

        public void RemoveCallbacks(IPlayerInputActions instance)
        {
            if (m_Wrapper.m_PlayerInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerInputActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerInputActions @PlayerInput => new PlayerInputActions(this);

    // InventoryInput
    private readonly InputActionMap m_InventoryInput;
    private List<IInventoryInputActions> m_InventoryInputActionsCallbackInterfaces = new List<IInventoryInputActions>();
    private readonly InputAction m_InventoryInput_HotBar1;
    private readonly InputAction m_InventoryInput_HotBar2;
    private readonly InputAction m_InventoryInput_HotBar3;
    private readonly InputAction m_InventoryInput_HotBar4;
    private readonly InputAction m_InventoryInput_HotBar5;
    private readonly InputAction m_InventoryInput_HotBar6;
    private readonly InputAction m_InventoryInput_HotBar7;
    private readonly InputAction m_InventoryInput_HotBar8;
    private readonly InputAction m_InventoryInput_HotBar9;
    private readonly InputAction m_InventoryInput_HotBar0;
    private readonly InputAction m_InventoryInput_MouseWheel;
    private readonly InputAction m_InventoryInput_Confirm;
    private readonly InputAction m_InventoryInput_ShowBackpack;
    private readonly InputAction m_InventoryInput_CloseMenu;
    public struct InventoryInputActions
    {
        private @SourceInput m_Wrapper;
        public InventoryInputActions(@SourceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @HotBar1 => m_Wrapper.m_InventoryInput_HotBar1;
        public InputAction @HotBar2 => m_Wrapper.m_InventoryInput_HotBar2;
        public InputAction @HotBar3 => m_Wrapper.m_InventoryInput_HotBar3;
        public InputAction @HotBar4 => m_Wrapper.m_InventoryInput_HotBar4;
        public InputAction @HotBar5 => m_Wrapper.m_InventoryInput_HotBar5;
        public InputAction @HotBar6 => m_Wrapper.m_InventoryInput_HotBar6;
        public InputAction @HotBar7 => m_Wrapper.m_InventoryInput_HotBar7;
        public InputAction @HotBar8 => m_Wrapper.m_InventoryInput_HotBar8;
        public InputAction @HotBar9 => m_Wrapper.m_InventoryInput_HotBar9;
        public InputAction @HotBar0 => m_Wrapper.m_InventoryInput_HotBar0;
        public InputAction @MouseWheel => m_Wrapper.m_InventoryInput_MouseWheel;
        public InputAction @Confirm => m_Wrapper.m_InventoryInput_Confirm;
        public InputAction @ShowBackpack => m_Wrapper.m_InventoryInput_ShowBackpack;
        public InputAction @CloseMenu => m_Wrapper.m_InventoryInput_CloseMenu;
        public InputActionMap Get() { return m_Wrapper.m_InventoryInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryInputActions set) { return set.Get(); }
        public void AddCallbacks(IInventoryInputActions instance)
        {
            if (instance == null || m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Add(instance);
            @HotBar1.started += instance.OnHotBar1;
            @HotBar1.performed += instance.OnHotBar1;
            @HotBar1.canceled += instance.OnHotBar1;
            @HotBar2.started += instance.OnHotBar2;
            @HotBar2.performed += instance.OnHotBar2;
            @HotBar2.canceled += instance.OnHotBar2;
            @HotBar3.started += instance.OnHotBar3;
            @HotBar3.performed += instance.OnHotBar3;
            @HotBar3.canceled += instance.OnHotBar3;
            @HotBar4.started += instance.OnHotBar4;
            @HotBar4.performed += instance.OnHotBar4;
            @HotBar4.canceled += instance.OnHotBar4;
            @HotBar5.started += instance.OnHotBar5;
            @HotBar5.performed += instance.OnHotBar5;
            @HotBar5.canceled += instance.OnHotBar5;
            @HotBar6.started += instance.OnHotBar6;
            @HotBar6.performed += instance.OnHotBar6;
            @HotBar6.canceled += instance.OnHotBar6;
            @HotBar7.started += instance.OnHotBar7;
            @HotBar7.performed += instance.OnHotBar7;
            @HotBar7.canceled += instance.OnHotBar7;
            @HotBar8.started += instance.OnHotBar8;
            @HotBar8.performed += instance.OnHotBar8;
            @HotBar8.canceled += instance.OnHotBar8;
            @HotBar9.started += instance.OnHotBar9;
            @HotBar9.performed += instance.OnHotBar9;
            @HotBar9.canceled += instance.OnHotBar9;
            @HotBar0.started += instance.OnHotBar0;
            @HotBar0.performed += instance.OnHotBar0;
            @HotBar0.canceled += instance.OnHotBar0;
            @MouseWheel.started += instance.OnMouseWheel;
            @MouseWheel.performed += instance.OnMouseWheel;
            @MouseWheel.canceled += instance.OnMouseWheel;
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @ShowBackpack.started += instance.OnShowBackpack;
            @ShowBackpack.performed += instance.OnShowBackpack;
            @ShowBackpack.canceled += instance.OnShowBackpack;
            @CloseMenu.started += instance.OnCloseMenu;
            @CloseMenu.performed += instance.OnCloseMenu;
            @CloseMenu.canceled += instance.OnCloseMenu;
        }

        private void UnregisterCallbacks(IInventoryInputActions instance)
        {
            @HotBar1.started -= instance.OnHotBar1;
            @HotBar1.performed -= instance.OnHotBar1;
            @HotBar1.canceled -= instance.OnHotBar1;
            @HotBar2.started -= instance.OnHotBar2;
            @HotBar2.performed -= instance.OnHotBar2;
            @HotBar2.canceled -= instance.OnHotBar2;
            @HotBar3.started -= instance.OnHotBar3;
            @HotBar3.performed -= instance.OnHotBar3;
            @HotBar3.canceled -= instance.OnHotBar3;
            @HotBar4.started -= instance.OnHotBar4;
            @HotBar4.performed -= instance.OnHotBar4;
            @HotBar4.canceled -= instance.OnHotBar4;
            @HotBar5.started -= instance.OnHotBar5;
            @HotBar5.performed -= instance.OnHotBar5;
            @HotBar5.canceled -= instance.OnHotBar5;
            @HotBar6.started -= instance.OnHotBar6;
            @HotBar6.performed -= instance.OnHotBar6;
            @HotBar6.canceled -= instance.OnHotBar6;
            @HotBar7.started -= instance.OnHotBar7;
            @HotBar7.performed -= instance.OnHotBar7;
            @HotBar7.canceled -= instance.OnHotBar7;
            @HotBar8.started -= instance.OnHotBar8;
            @HotBar8.performed -= instance.OnHotBar8;
            @HotBar8.canceled -= instance.OnHotBar8;
            @HotBar9.started -= instance.OnHotBar9;
            @HotBar9.performed -= instance.OnHotBar9;
            @HotBar9.canceled -= instance.OnHotBar9;
            @HotBar0.started -= instance.OnHotBar0;
            @HotBar0.performed -= instance.OnHotBar0;
            @HotBar0.canceled -= instance.OnHotBar0;
            @MouseWheel.started -= instance.OnMouseWheel;
            @MouseWheel.performed -= instance.OnMouseWheel;
            @MouseWheel.canceled -= instance.OnMouseWheel;
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @ShowBackpack.started -= instance.OnShowBackpack;
            @ShowBackpack.performed -= instance.OnShowBackpack;
            @ShowBackpack.canceled -= instance.OnShowBackpack;
            @CloseMenu.started -= instance.OnCloseMenu;
            @CloseMenu.performed -= instance.OnCloseMenu;
            @CloseMenu.canceled -= instance.OnCloseMenu;
        }

        public void RemoveCallbacks(IInventoryInputActions instance)
        {
            if (m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInventoryInputActions instance)
        {
            foreach (var item in m_Wrapper.m_InventoryInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InventoryInputActions @InventoryInput => new InventoryInputActions(this);

    // WeaponInput
    private readonly InputActionMap m_WeaponInput;
    private List<IWeaponInputActions> m_WeaponInputActionsCallbackInterfaces = new List<IWeaponInputActions>();
    private readonly InputAction m_WeaponInput_QuickUse_0;
    private readonly InputAction m_WeaponInput_QuickUse_1;
    private readonly InputAction m_WeaponInput_QuickUse_2;
    private readonly InputAction m_WeaponInput_QuickUse_3;
    private readonly InputAction m_WeaponInput_QuickUse_4;
    private readonly InputAction m_WeaponInput_SwitchLastWeapon;
    private readonly InputAction m_WeaponInput_Fire;
    private readonly InputAction m_WeaponInput_Aim;
    private readonly InputAction m_WeaponInput_Reload;
    private readonly InputAction m_WeaponInput_FireModeSwitch;
    public struct WeaponInputActions
    {
        private @SourceInput m_Wrapper;
        public WeaponInputActions(@SourceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @QuickUse_0 => m_Wrapper.m_WeaponInput_QuickUse_0;
        public InputAction @QuickUse_1 => m_Wrapper.m_WeaponInput_QuickUse_1;
        public InputAction @QuickUse_2 => m_Wrapper.m_WeaponInput_QuickUse_2;
        public InputAction @QuickUse_3 => m_Wrapper.m_WeaponInput_QuickUse_3;
        public InputAction @QuickUse_4 => m_Wrapper.m_WeaponInput_QuickUse_4;
        public InputAction @SwitchLastWeapon => m_Wrapper.m_WeaponInput_SwitchLastWeapon;
        public InputAction @Fire => m_Wrapper.m_WeaponInput_Fire;
        public InputAction @Aim => m_Wrapper.m_WeaponInput_Aim;
        public InputAction @Reload => m_Wrapper.m_WeaponInput_Reload;
        public InputAction @FireModeSwitch => m_Wrapper.m_WeaponInput_FireModeSwitch;
        public InputActionMap Get() { return m_Wrapper.m_WeaponInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WeaponInputActions set) { return set.Get(); }
        public void AddCallbacks(IWeaponInputActions instance)
        {
            if (instance == null || m_Wrapper.m_WeaponInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WeaponInputActionsCallbackInterfaces.Add(instance);
            @QuickUse_0.started += instance.OnQuickUse_0;
            @QuickUse_0.performed += instance.OnQuickUse_0;
            @QuickUse_0.canceled += instance.OnQuickUse_0;
            @QuickUse_1.started += instance.OnQuickUse_1;
            @QuickUse_1.performed += instance.OnQuickUse_1;
            @QuickUse_1.canceled += instance.OnQuickUse_1;
            @QuickUse_2.started += instance.OnQuickUse_2;
            @QuickUse_2.performed += instance.OnQuickUse_2;
            @QuickUse_2.canceled += instance.OnQuickUse_2;
            @QuickUse_3.started += instance.OnQuickUse_3;
            @QuickUse_3.performed += instance.OnQuickUse_3;
            @QuickUse_3.canceled += instance.OnQuickUse_3;
            @QuickUse_4.started += instance.OnQuickUse_4;
            @QuickUse_4.performed += instance.OnQuickUse_4;
            @QuickUse_4.canceled += instance.OnQuickUse_4;
            @SwitchLastWeapon.started += instance.OnSwitchLastWeapon;
            @SwitchLastWeapon.performed += instance.OnSwitchLastWeapon;
            @SwitchLastWeapon.canceled += instance.OnSwitchLastWeapon;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @FireModeSwitch.started += instance.OnFireModeSwitch;
            @FireModeSwitch.performed += instance.OnFireModeSwitch;
            @FireModeSwitch.canceled += instance.OnFireModeSwitch;
        }

        private void UnregisterCallbacks(IWeaponInputActions instance)
        {
            @QuickUse_0.started -= instance.OnQuickUse_0;
            @QuickUse_0.performed -= instance.OnQuickUse_0;
            @QuickUse_0.canceled -= instance.OnQuickUse_0;
            @QuickUse_1.started -= instance.OnQuickUse_1;
            @QuickUse_1.performed -= instance.OnQuickUse_1;
            @QuickUse_1.canceled -= instance.OnQuickUse_1;
            @QuickUse_2.started -= instance.OnQuickUse_2;
            @QuickUse_2.performed -= instance.OnQuickUse_2;
            @QuickUse_2.canceled -= instance.OnQuickUse_2;
            @QuickUse_3.started -= instance.OnQuickUse_3;
            @QuickUse_3.performed -= instance.OnQuickUse_3;
            @QuickUse_3.canceled -= instance.OnQuickUse_3;
            @QuickUse_4.started -= instance.OnQuickUse_4;
            @QuickUse_4.performed -= instance.OnQuickUse_4;
            @QuickUse_4.canceled -= instance.OnQuickUse_4;
            @SwitchLastWeapon.started -= instance.OnSwitchLastWeapon;
            @SwitchLastWeapon.performed -= instance.OnSwitchLastWeapon;
            @SwitchLastWeapon.canceled -= instance.OnSwitchLastWeapon;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @FireModeSwitch.started -= instance.OnFireModeSwitch;
            @FireModeSwitch.performed -= instance.OnFireModeSwitch;
            @FireModeSwitch.canceled -= instance.OnFireModeSwitch;
        }

        public void RemoveCallbacks(IWeaponInputActions instance)
        {
            if (m_Wrapper.m_WeaponInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWeaponInputActions instance)
        {
            foreach (var item in m_Wrapper.m_WeaponInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WeaponInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WeaponInputActions @WeaponInput => new WeaponInputActions(this);

    // AbilityInput
    private readonly InputActionMap m_AbilityInput;
    private List<IAbilityInputActions> m_AbilityInputActionsCallbackInterfaces = new List<IAbilityInputActions>();
    private readonly InputAction m_AbilityInput_UseAbility;
    public struct AbilityInputActions
    {
        private @SourceInput m_Wrapper;
        public AbilityInputActions(@SourceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @UseAbility => m_Wrapper.m_AbilityInput_UseAbility;
        public InputActionMap Get() { return m_Wrapper.m_AbilityInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AbilityInputActions set) { return set.Get(); }
        public void AddCallbacks(IAbilityInputActions instance)
        {
            if (instance == null || m_Wrapper.m_AbilityInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AbilityInputActionsCallbackInterfaces.Add(instance);
            @UseAbility.started += instance.OnUseAbility;
            @UseAbility.performed += instance.OnUseAbility;
            @UseAbility.canceled += instance.OnUseAbility;
        }

        private void UnregisterCallbacks(IAbilityInputActions instance)
        {
            @UseAbility.started -= instance.OnUseAbility;
            @UseAbility.performed -= instance.OnUseAbility;
            @UseAbility.canceled -= instance.OnUseAbility;
        }

        public void RemoveCallbacks(IAbilityInputActions instance)
        {
            if (m_Wrapper.m_AbilityInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAbilityInputActions instance)
        {
            foreach (var item in m_Wrapper.m_AbilityInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AbilityInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AbilityInputActions @AbilityInput => new AbilityInputActions(this);

    // MapInput
    private readonly InputActionMap m_MapInput;
    private List<IMapInputActions> m_MapInputActionsCallbackInterfaces = new List<IMapInputActions>();
    private readonly InputAction m_MapInput_CloseMap;
    private readonly InputAction m_MapInput_ZoomPlus;
    private readonly InputAction m_MapInput_ZoomLess;
    private readonly InputAction m_MapInput_Confirm;
    private readonly InputAction m_MapInput_Canel;
    public struct MapInputActions
    {
        private @SourceInput m_Wrapper;
        public MapInputActions(@SourceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseMap => m_Wrapper.m_MapInput_CloseMap;
        public InputAction @ZoomPlus => m_Wrapper.m_MapInput_ZoomPlus;
        public InputAction @ZoomLess => m_Wrapper.m_MapInput_ZoomLess;
        public InputAction @Confirm => m_Wrapper.m_MapInput_Confirm;
        public InputAction @Canel => m_Wrapper.m_MapInput_Canel;
        public InputActionMap Get() { return m_Wrapper.m_MapInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MapInputActions set) { return set.Get(); }
        public void AddCallbacks(IMapInputActions instance)
        {
            if (instance == null || m_Wrapper.m_MapInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MapInputActionsCallbackInterfaces.Add(instance);
            @CloseMap.started += instance.OnCloseMap;
            @CloseMap.performed += instance.OnCloseMap;
            @CloseMap.canceled += instance.OnCloseMap;
            @ZoomPlus.started += instance.OnZoomPlus;
            @ZoomPlus.performed += instance.OnZoomPlus;
            @ZoomPlus.canceled += instance.OnZoomPlus;
            @ZoomLess.started += instance.OnZoomLess;
            @ZoomLess.performed += instance.OnZoomLess;
            @ZoomLess.canceled += instance.OnZoomLess;
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @Canel.started += instance.OnCanel;
            @Canel.performed += instance.OnCanel;
            @Canel.canceled += instance.OnCanel;
        }

        private void UnregisterCallbacks(IMapInputActions instance)
        {
            @CloseMap.started -= instance.OnCloseMap;
            @CloseMap.performed -= instance.OnCloseMap;
            @CloseMap.canceled -= instance.OnCloseMap;
            @ZoomPlus.started -= instance.OnZoomPlus;
            @ZoomPlus.performed -= instance.OnZoomPlus;
            @ZoomPlus.canceled -= instance.OnZoomPlus;
            @ZoomLess.started -= instance.OnZoomLess;
            @ZoomLess.performed -= instance.OnZoomLess;
            @ZoomLess.canceled -= instance.OnZoomLess;
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @Canel.started -= instance.OnCanel;
            @Canel.performed -= instance.OnCanel;
            @Canel.canceled -= instance.OnCanel;
        }

        public void RemoveCallbacks(IMapInputActions instance)
        {
            if (m_Wrapper.m_MapInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMapInputActions instance)
        {
            foreach (var item in m_Wrapper.m_MapInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MapInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MapInputActions @MapInput => new MapInputActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnSwitchCamState(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnFly(InputAction.CallbackContext context);
    }
    public interface IInventoryInputActions
    {
        void OnHotBar1(InputAction.CallbackContext context);
        void OnHotBar2(InputAction.CallbackContext context);
        void OnHotBar3(InputAction.CallbackContext context);
        void OnHotBar4(InputAction.CallbackContext context);
        void OnHotBar5(InputAction.CallbackContext context);
        void OnHotBar6(InputAction.CallbackContext context);
        void OnHotBar7(InputAction.CallbackContext context);
        void OnHotBar8(InputAction.CallbackContext context);
        void OnHotBar9(InputAction.CallbackContext context);
        void OnHotBar0(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnShowBackpack(InputAction.CallbackContext context);
        void OnCloseMenu(InputAction.CallbackContext context);
    }
    public interface IWeaponInputActions
    {
        void OnQuickUse_0(InputAction.CallbackContext context);
        void OnQuickUse_1(InputAction.CallbackContext context);
        void OnQuickUse_2(InputAction.CallbackContext context);
        void OnQuickUse_3(InputAction.CallbackContext context);
        void OnQuickUse_4(InputAction.CallbackContext context);
        void OnSwitchLastWeapon(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnFireModeSwitch(InputAction.CallbackContext context);
    }
    public interface IAbilityInputActions
    {
        void OnUseAbility(InputAction.CallbackContext context);
    }
    public interface IMapInputActions
    {
        void OnCloseMap(InputAction.CallbackContext context);
        void OnZoomPlus(InputAction.CallbackContext context);
        void OnZoomLess(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCanel(InputAction.CallbackContext context);
    }
}
